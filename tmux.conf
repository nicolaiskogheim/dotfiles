##################################################
###                  MAPPINGS                  ###
##################################################

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# This is actually the default prefix, but I'll leave it here so it's easy to
# change if I want to
unbind-key C-a
set -g prefix 'C-b'
bind-key 'C-b' send-prefix

# I like to have a big scroll back buffer
set-option -g history-limit 20000

# smart pane switching with awareness of vim splits
# I use Ctrl-S to go left, Ctrl-F to go right, Ctrl-K and Ctrl-J to go up and
# down. If you want to change this, just change s/j/k/f to whatever you want.
# You may need to 'killall tmux', or at least reload the config with prefix-r
#    here v                                                                                   and here v
bind -n C-s run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-s) || tmux select-pane -L || true"\; refresh-client -S
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D || true"\; refresh-client -S
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U || true"\; refresh-client -S
bind -n C-f run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-f) || tmux select-pane -R || true"\; refresh-client -S
# Ctrl backslash jumps to the last active pane
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"\; refresh-client -S

# Stupid pane swapping
bind S run "tmux swap-pane -D"
bind J run "tmux swap-pane -D"
bind K run "tmux swap-pane -U"
bind F run "tmux swap-pane -U"

# use | and _ to split windows
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"

# from http://endot.org/2011/12/06/my-tmux-configuration/
# keybindings to make resizing easier
bind -r C-H resize-pane -L
bind -r C-J resize-pane -D
bind -r C-K resize-pane -U
bind -r C-L resize-pane -R


##################################################
###                  CONFIG                    ###
##################################################
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# mode-keys [vi | emacs]
#     Use vi or emacs-style key bindings in copy and choice modes.  As with the
#     status-keys option, the default is emacs, unless VISUAL or EDITOR
#     contains `vi'.
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.5" | bc)" = 1 ]' \
  "bind-key -t vi-copy v begin-selection"


# If on mac, use pbcopy to copy in copy-mode
if-shell -b '[ `uname | grep -q Darwin` ] \
               && [ "$(echo "$TMUX_VERSION < 2.5" | bc)" = 1 ]' \
"bind-key -t vi-copy y copy-pipe \"reattach-to-user-namespace pbcopy\""
if-shell 'uname | grep -q Darwin' \
"set-option -g default-command \"reattach-to-user-namespace -l zsh\""
# TODO: Figure out how to copy in linux (xclip?)

# Update default binding of 'Enter' to also use copy-pipe

if-shell '[ `uname | grep -q Darwin` ] \
            && [ "$(echo "$TMUX_VERSION < 2.5" | bc)" = 1 ]' \
"unbind -t vi-copy Enter; \
bind-key -t vi-copy Enter copy-pipe \"reattach-to-user-namespace pbcopy\""


# Version-specific commands [grumble, grumble]
# See: https://github.com/tmux/tmux/blob/master/CHANGES
# Shamelessly stolen from http://stackoverflow.com/a/40902312/2531091

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.1" | bc)" = 1 ]' \
  "set -g mouse-select-pane on; set -g mode-mouse on; \
    set -g mouse-resize-pane on; set -g mouse-select-window on"

# In version 2.1 "mouse" replaced the previous 4 mouse options
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  "set -g mouse on"

# UTF8 is autodetected in 2.2 onwards, but errors if explicitly set
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.2" | bc)" = 1 ]' \
  "set -g utf8 on; set -g status-utf8 on; set -g mouse-utf8 on"


# Decrease command delay (increases vim responsiveness)
# escape-time time
#     Set the time in milliseconds for which tmux waits after an escape is
#     input to determine if it is part of a function or meta key sequences.
#     The default is 500 milliseconds.
set -sg escape-time 1


# default-terminal terminal
#     Set the default terminal for new windows created in this session - the
#     default value of the TERM environment variable.  For tmux to work
#     correctly, this must be set to `screen', `tmux' or a derivative of them.

set -g default-terminal "screen-256color"


# display-time time
#     Set the amount of time for which status line messages and other on-screen
#     indicators are displayed.  If set to 0, messages and indicators are
#     displayed until a key is pressed.  time is in milliseconds.
set-option -g display-time 3000

# focus-events [on | off]
#     When enabled, focus events are requested from the terminal if supported
#     and passed through to applications running in tmux.  Attached clients
#     should be detached and attached again after changing this option.
set-option -g focus-events on

# pane-border-format format
#     Set the text shown in pane border status lines.
# since: tmux 2.3
set-option -g pane-border-format "#{pane_index} #{pane_current_command} @@@ #{pane_title}"


# pane-border-status [off | top | bottom]
#     Turn pane border status lines off or set their position.
# since: tmux 2.3
set-option -g pane-border-status bottom

# allow-rename [on | off]
#    Allow programs to change the window name using a terminal escape sequence
#    (\ek...\e\\).  The default is on.
set-option -g allow-rename off

##################################################
###                  PLUGINS                   ###
##################################################


set -g @plugin 'tmux-plugins/tmux-resurrect'


##################################################
###                   THEME                    ###
##################################################


# This tmux statusbar config was created by tmuxline.vim
# on Wed, 18 Feb 2015

# Slight manual editing has been done. Search for 'getKbd' in the lines below

set -g status-bg "colour234"
set -g message-command-style fg="colour255",bg="colour238"
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-style fg="colour190"
set -g message-style fg="colour255",bg="colour238"
set -g status-right-length "100"
set -g status-right-style "none"
set -g status-style "none"
set -g pane-border-style fg="colour238"
set -g status-left-style "none"
setw -g window-status-style fg="colour85",bg="colour234","none"
setw -g window-status-activity-style fg="colour190",bg="colour234","none"
setw -g window-status-separator ""
set -g status-left "#[fg=colour17,bg=colour190] #S #[fg=colour190,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]#(/Users/nicolai/bin/getKbd)#[fg=colour255,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190] #h "
setw -g window-status-format "#[fg=colour85,bg=colour234] #I #[fg=colour85,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I #[fg=colour255,bg=colour238] #W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"

