# TODO(nicolai): Clean up this.
# Almost everything is copied verbatim from negatron, and doesn't really apply
# here.
#
#
# This is mouse pointer config that must exist in
# /etc/X11/xorg.conf.d/99-libinput-custom-config.conf
# I have it here in case I forget about this later.
# This should only be needed with mice with high sense.
# I don't need it for my lenovo mouse.
# Found this at https://wiki.archlinux.org/index.php/Mouse_acceleration
#
# Section "InputClass"
#  Identifier "Make cursor speed slow"
#  MatchDriver "libinput"
#  MatchProduct "Apple Mus 1"
#  Option "AccelSpeed" "-0.8"
# EndSection

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# Add my local bin to PATH
PATH="${HOME}/bin:${PATH}"
# Add screenlayout scripts to path
PATH="${HOME}/.screenlayout:${PATH}"
# Add gobin to path
PATH="${HOME}/go/bin:${PATH}"
export PATH

GOPATH="/home/nicolai/go"
export GOPATH
GOROOT="/usr/lib/go"
export GOROOT

# Like EDITOR, but for Arch
export VISUAL=vim

# alias ls='ls --color=auto'
# PS1='[\u@\h \W]\$ '
AUTOENV_PATH="/usr/share/autoenv-git/activate.sh"
test -f "$AUTOENV_PATH" && source "$AUTOENV_PATH"

## Completion sourcing
source ~/.completions/gcloud.completion.zsh.inc

# I use commands located in ~/bin for this now
# xmod="xmodmap $HOME/.config/xmodmap/config"
# alias us="setxkbmap us; $xmod"
# alias no="setxkbmap no; $xmod"

# Here I nag about stuff that is missing
which i3 >/dev/null || \
    (echo >&2 "where is i3???" \
    && >&2 "what are you doing??")
which xdotool >/dev/null || \
    (echo >&2 "Please 'pacman -S xdotool'"\
    && echo >&2 " Vim integration won't work otherwise")

if [[ ! -f "$HOME/.pam_environment" ]]
then
    printf 'SSH_AUTH_SOCK DEFAULT="${XDG_RUNTIME_DIR}/ssh-agent.socket"\n' \
      > .pam_environment
fi

# Check that ssh-agent is running, lest I must type my ssh key password
# everytime I use it.
if ! systemctl status ssh-agent --user &>/dev/null
then
    printf >&2 "SSH-agent not running.\n"
    printf >&2 "Please do the following:\n"
    printf >&2 "cp -R ~/dotfiles/config/systemd/user ~/.config/systemd\n"
    printf >&2 "\tsystemctl enable ssh-agent.service --user\n"
    printf >&2 "\tsystemctl start ssh-agent.service --user\n"
fi

# Functions below 

function torrent {
	P=$(pwd)
	cd ~/Downloads/Torrent/.watch
	curl -O -J -L $@
	cd $P
}

function magnet {
    P=$(pwd)
	cd ~/Downloads/Torrent/.watch
    [[ "$1" =~ xt=urn:btih:([\^\&/]+) ]] || exit;
    echo "d10:magnet-uri${#1}:${1}e" > "meta-${BASH_REMATCH[1]}.torrent"
    cd $P
}
